/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define GME 4

&lt {
    flavor = "balanced";
    tapping-term-ms = <220>;
    quick-tap-ms = <175>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        to_game_layer {
            bindings = <&to 4>;
            key-positions = <27 14>;
            layers = <0>;
        };

        to_default_layer {
            bindings = <&to 0>;
            key-positions = <15 3>;
            layers = <4>;
        };

        combo_delete {
            bindings = <&kp DEL>;
            key-positions = <37 38>;
            layers = <0>;
        };

        combo_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <36 37>;
            layers = <0>;
        };

        combo_cs_mic {
            bindings = <&kp K>;
            key-positions = <37 38>;
            layers = <4>;
        };

        combo_copy {
            bindings = <&kp LC(C)>;
            key-positions = <2 3 4>;
            layers = <0>;
        };

        combo_paste {
            bindings = <&kp LC(V)>;
            key-positions = <2 4>;
            layers = <0>;
        };

        combo_cut {
            bindings = <&kp LC(X)>;
            key-positions = <2 3>;
            layers = <0>;
        };
    };
};

/ {
    macros {
        function: function {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp SPACE &kp EQUAL &kp SPACE &kp LEFT_PARENTHESIS &kp RIGHT_ARROW &kp SPACE &kp EQUAL &kp GREATER_THAN &kp SPACE &kp LEFT_BRACE &kp ENTER>,
                <&macro_tap>;

            label = "FUNCTION";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "DEF";
            bindings = <
&mt LEFT_GUI RIGHT_BRACKET  &kp Q  &kp W  &kp E  &kp R        &kp T                                      &kp Y          &kp U        &kp I      &kp O    &kp P     &mt RIGHT_GUI LEFT_BRACKET
&kp LCTRL                   &kp A  &kp S  &kp D  &kp F        &kp G                                      &kp H          &kp J        &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&kp LALT                    &kp Z  &kp X  &kp C  &kp V        &kp B                                      &kp N          &kp M        &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                                                 &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET  &lt LWR ESC  &kp BACKSPACE  &lt RSE DEL
            >;
        };

        lower_layer {
            label = "LWR";
            bindings = <
&kp UNDER       &kp F1    &kp F2  &kp F3    &kp F4       &kp F5                     &kp F6     &kp F7       &kp F8    &kp F9    &kp F10   &kp F11
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DLLR     &kp PRCNT                  &kp CARET  &kp AMPS     &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4       &kp N5                     &kp N6     &kp N7       &kp N8    &kp N9    &kp N0    &trans
                                            &lt ADJ TAB  &trans     &trans  &trans  &trans     &lt ADJ DEL
            >;
        };

        raise_layer {
            label = "RSE";
            bindings = <
&kp KP_NUM       &kp SLASH     &kp N1        &kp N2        &kp N3        &kp MINUS                             &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS
&mt LCTRL EQUAL  &kp ASTERISK  &kp N4        &kp N5        &kp N6        &kp PLUS                              &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&trans           &kp NUMBER_0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PERIOD                            &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                                           &trans        &trans      &lt ADJ RET  &lt ADJ ESC  &trans        &trans
            >;
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
&bootloader   &sys_reset    &studio_unlock  &none       &none            &none           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none            &none  &none  &none
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &none  &none  &none
&out OUT_TOG  &none         &none         &none         &none            &none           &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &none  &none  &none
                                          &trans        &none            &trans          &trans           &none            &trans
            >;
        };

        game_layer {
            label = "GME";
            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3  &kp N4  &kp NUMBER_5                  &kp F1     &kp F2  &kp T   &trans  &trans       &kp C_VOLUME_UP
&kp LEFT_SHIFT  &kp Q   &kp W   &kp E   &kp R   &kp G                         &kp GRAVE  &trans  &trans  &trans  &kp LA(TAB)  &kp C_VOL_DN
&kp LCTRL       &kp A   &kp S   &kp D   &kp B   &kp F                         &trans     &kp M   &trans  &trans  &kp LS(TAB)  &kp K_MUTE
                                        &kp C   &kp SPACE     &kp TAB  &kp K  &trans     &trans
            >;
        };
    };
};
